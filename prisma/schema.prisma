generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Farmer {
  id            Int      @id @default(autoincrement())
  farmerName    String
  relationship  String
  gender        String
  community     String
  aadharNumber  String   @unique
  state         String
  district      String
  mandal        String
  village       String
  panchayath    String
  dateOfBirth   DateTime
  age           Int
  contactNumber String
  accountNumber String

  documents   Documents?
  bankDetails BankDetails?
  fields      Fields[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("farmers")
}

model Documents {
  id         Int     @id @default(autoincrement())
  profilePic String?
  aadhar     String?
  land       String?
  bank       String?

  farmer   Farmer @relation(fields: [farmerId], references: [id], onDelete: Cascade)
  farmerId Int    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("documents")
}

model BankDetails {
  id         Int    @id @default(autoincrement())
  ifscCode   String
  branchName String
  address    String
  bankName   String
  bankCode   String

  farmer   Farmer @relation(fields: [farmerId], references: [id], onDelete: Cascade)
  farmerId Int    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bank_details")
}

model Fields {
  id            Int    @id @default(autoincrement())
  surveyNumber  String
  areaHa        Float
  yieldEstimate Float
  locationX     Float
  locationY     Float

  farmer   Farmer @relation(fields: [farmerId], references: [id], onDelete: Cascade)
  farmerId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fields")
}
